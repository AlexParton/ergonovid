{"version":3,"file":"static/js/607.b3e34bc5.chunk.js","mappings":"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","sources":["components/UI/Button.js","components/UI/Loader.js","components/UI/Overlay.js","components/eventos/ContactoSelectable.js","components/eventos/AddGente.js","components/eventos/AdderForm.js","components/UI/UsersModal.js","components/eventos/FechasStatsTabla.js","components/eventos/FechasHeatmap.js","components/charts/Piechart.js","components/eventos/FechasPiechart.js","components/eventos/FechasStats.js","components/eventos/EventoFechas.js","components/UI/Clickable.js","components/eventos/EventoPlaces.js","components/eventos/EventoRegalos.js","pages/EventoPage.js"],"sourcesContent":["const Button = props => {\n    return (\n        <button onClick={props.onclick} className=\"classic-button\">{props.title}</button>\n    )\n}\n\nexport default Button;","const Loader = () => {\n    return(<div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>   )\n}\n\nexport default Loader;","const Overlay = props => {\n    return <button onClick={props.onclick} className=\"overlay\"></button>\n}\n\nexport default Overlay;","import { useState, useEffect, Fragment } from 'react';\nimport { collection, getFirestore, getDocs, doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport MyFirebase from \"../../database/firebase\";\nconst app = MyFirebase();\n\nconst ContactoSelectable = props => {\n    const [isSelected, setIsSelected] = useState(props.evento.users.includes(props.contacto.displayName))\n    const db = getFirestore(app);\n    const handleSelection = () => {\n        const eventoRef = doc(db, 'fullEventos', props.evento.eventoId);\n        const teaserRef = doc(db, 'eventos', props.evento.eventoId);\n        if (isSelected) {\n            setIsSelected(false);\n\n            getDoc(eventoRef).then((doc) => {\n                const updatedParticipantes = doc.data().users.filter((user) => user !== props.contacto.displayName) \n                updateDoc(eventoRef, {users: updatedParticipantes})\n            })\n\n            getDoc(teaserRef).then((doc) => {\n                const updatedParticipantes = doc.data().users.filter((user) => user !== props.contacto.userId) \n                updateDoc(teaserRef, {users: updatedParticipantes})\n            })\n\n        } else {\n            setIsSelected(true);\n           \n            getDoc(eventoRef).then((doc) => {\n              const updatedParticipantes = [...doc.data().users, props.contacto.displayName]\n              updateDoc(eventoRef, {users: updatedParticipantes})\n            })\n            \n            getDoc(teaserRef).then((doc) => {\n                const updatedParticipantes = [...doc.data().users, props.contacto.userId]\n                updateDoc(teaserRef, {users: updatedParticipantes})\n              })    \n        }\n    }\n\n    const handleSelectionCreation = () => {\n        if (isSelected) {\n            setIsSelected(false);\n            props.onAdd(props.contacto.displayName, false)\n        } else {\n            setIsSelected(true);\n            props.onAdd(props.contacto.displayName, true)\n        }\n    }\n\n    return (\n        <button onClick={(props.isCreation) ? handleSelectionCreation : handleSelection} className={`contacto-card selectable ${!isSelected ? 'unselected' : ''}`} to={`/profile/${props.contacto.userId}`}>\n            <div className=\"profile-avatar medium\">\n                {(props.contacto.displayName.trim().indexOf(' ') !== -1)  ? props.contacto.displayName.trim().split(\" \").map((n)=>n[0]).join(\"\") : props.contacto.displayName.trim().substring(0,2)}\n            </div>\n            {props.contacto.displayName}\n        </button> \n    )\n}\n\nexport default ContactoSelectable;","import Overlay from \"../UI/Overlay\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport { collection, getFirestore, getDocs, doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport Loader from '../../components/UI/Loader';\nimport MyFirebase from \"../../database/firebase\";\nimport ContactoSelectable from \"./ContactoSelectable\";\nimport { Link } from \"react-router-dom\";\nconst app = MyFirebase();\n\nconst AddGente = props => {\n    const [amigos, setAmigos] = useState([]);\n    const [isLoading, setIsloading] = useState(true)\n    const db = getFirestore(app);\n    useEffect(() => {\n        const userRef = doc(db, 'users', localStorage.getItem('uid'));\n        getDoc(userRef).then((doc) => {\n            setAmigos(doc.data().engagedTo)\n        }).then(() => setIsloading(false))\n    }, [])\n    return (\n        <Fragment>\n            <Overlay onclick={props.onclose}/>\n            <div className=\"add-gente-wrapper\">\n              {isLoading\n               ? <div className=\"loader-wrapper\"><Loader /></div>    \n               : <section className=\"gapper\">\n                   <h3>{(props.isCreation) ? 'Añadir participantes al Evento' : `Adminisitrar participantes para ${props.evento.title}`}</h3>\n                   {(amigos.length > 0) && amigos.map((contacto) => <ContactoSelectable onAdd={props.onAdd} isCreation={props.isCreation} evento={props.evento} key={contacto.userId} contacto={contacto}/>)}\n                   {(amigos.length === 0) && <p>Todavía no tienes contactos en tu red. Puedes buscarlos en la sección 'Mis Contactos' desde <Link to={`/profile/${localStorage.getItem('uid')}`}>TU PERFIL</Link></p>}\n                 </section>   \n              }    \n            </div>\n        </Fragment>\n       \n    )\n}\n\nexport default AddGente;","import Overlay from \"../UI/Overlay\";\nimport { Fragment, useState } from 'react';\nimport Button from \"../UI/Button\";\n\nconst AdderForm = props => {\n    const [cosas, setCosas] = useState([]);\n    const [userInput, setUserInput] = useState('');\n    const cosasDisplay = cosas.map((cosa) => <div key={cosa} className=\"cosa-added contacto-card\">{cosa}</div>);\n\n    const inputHandler = event => {\n        setUserInput(event.target.value)\n    }\n\n    const addCosaHandler = (event) => {\n        event.preventDefault();\n        const cosasCopy = [...cosas];\n        const cosasUpdate = [...cosasCopy, userInput];\n        setCosas(cosasUpdate);\n        setUserInput('');\n    }\n\n    return (\n        <Fragment>\n            <Overlay onclick={props.onclose}/>\n            <div className=\"add-gente-wrapper gapper\">\n                <h3>Añadir {props.isAdding}</h3>\n                {cosasDisplay}\n                <form onSubmit={addCosaHandler}>\n                    {/* <Input value={userInput} onInputChange={inputHandler} name='cosa' type='text' label=\"Escribe tu propuesta\"/> */}\n                    <div className=\"input-wrapper\">\n                        <input placeholder=\"Escribe tu propuesta\" onChange={inputHandler} value={userInput}/>\n                    </div>\n                    <button className=\"classic-button\">AÑADIR A LA LISTA</button>\n                </form>\n                {(cosas.length > 0) && <div className=\"medium-button\"><Button title=\"TODO LISTO\" onclick={() => props.onAdd(cosas)}/></div>}\n            </div>\n        </Fragment>    \n        \n    )\n}\n\nexport default AdderForm;","const UsersModal = props => {\n    const users =  props.users.map((user) => <div key={user} ><span className=\"dummy-avatar\">{user.split(\" \").map((n)=>n[0]).join(\"\")}</span><p>{user}</p></div>);\n    \n    return (\n        <section className=\"users-modal\">\n            {users}\n        </section>\n    )\n}\n\nexport default UsersModal;","import { Fragment, useState } from 'react';\nimport { BsBookmarkHeart as FavIcon } from \"react-icons/bs\";\nimport { FaUsers as UsersIcon } from \"react-icons/fa\";\nimport Overlay from '../UI/Overlay';\nimport UsersModal from \"../UI/UsersModal\";\n\nconst FechasStatsTabla = props => {\n    const [showModal, setShowModal] = useState(false)\n    const tableTr = props.toMeasure.map((measure) => {\n        let toMeasureCopy = [...measure.users];\n        if (toMeasureCopy.length > 5) {\n            toMeasureCopy.length = 5;\n        }\n\n        const measureItem = {\n            fechas: measure.date,\n            sitios: measure.place,\n            regalos: measure.regalo\n        }\n\n        const subject = (props.statsOf === 'fechas') \n          ? `${new Date(measure.date).getDate()}/${new Date(measure.date).getMonth()}/${new Date(measure.date).getFullYear() - 2000} `\n          : measureItem[props.statsOf]\n\n        return (\n            <div key={measureItem[props.statsOf]} className=\"fechas-stats-tabla-tr\">\n                <div><FavIcon /></div>\n                <div>{subject}</div>\n                <div>{toMeasureCopy.map((user) => <span key={user} className=\"dummy-avatar\">{user.split(\" \").map((n)=>n[0]).join(\"\")}</span>)}{(measure.users.length > 5) && <span className=\"dummy-avatar plus\">+{measure.users.length - 5}</span>}</div>\n                <button onClick={() => setShowModal(true)} className=\"see-voters\"><UsersIcon /></button>\n            </div>\n        )\n    })\n\n    return (\n        <Fragment>\n            <section className=\"fechas-stats-tabla marger gapper neumorpher\">\n                <h3>TOP {props.title}</h3>\n                {tableTr}\n            </section>\n            {showModal && \n                <Fragment>\n                    <Overlay onclick={() => setShowModal(false)}/>\n                    <UsersModal users={props.evento.users} onclose={() => setShowModal(false)}/>\n                </Fragment>\n            }\n        </Fragment>\n       \n    )\n}\n\nexport default FechasStatsTabla;\n","import { FaUsers as UsersIcon } from \"react-icons/fa\";\nimport { Fragment, useState } from 'react';\nimport Overlay from '../UI/Overlay';\nimport UsersModal from \"../UI/UsersModal\";\n\nconst FechasHeatmap = props => {\n    const [showModal, setShowModal] = useState(false)\n\n    const measureItem = {\n        fechas: 'date',\n        sitios: 'place',\n        regalos: 'regalo'\n    }\n\n    const Tr = ({children}) => {\n        return <tr>{children}</tr>\n    }\n\n    const TdBottom = () => {\n        const userTds =  props.evento.users.map((user) => <td key={Math.floor(Math.random() * 10000)}>{user.split(\" \").map((n)=>n[0]).join(\"\")}</td>)\n        return <tr key={Math.floor(Math.random() * 10000)}><td key={Math.floor(Math.random() * 10000)}><button onClick={() => setShowModal(true)} className=\"see-voters\"><UsersIcon /></button></td>{userTds}</tr>\n    }\n\n    const rows = props.toMeasure.map((item) => {\n        // const dateInVotes = props.toMeasure.filter(obj => obj[measureItem[props.statsOf]] === item);\n        // console.log(dateInVotes)\n        const subject = (props.statsOf === 'fechas') \n        ? `${new Date(item.date).getDate()}/${new Date(item.date).getMonth()}/${new Date(item.date).getFullYear() - 2000} `\n        : item[measureItem[props.statsOf]]\n        const tdWidth = 85 / props.evento.users.length;\n        return (\n            <Tr key={Math.floor(Math.random() * 10000)}><td>{subject}</td>{ props.evento.users.map((user) => <td key={Math.floor(Math.random() * 10000)} style={{width: tdWidth + '%'}}><span className={(item.users.includes(user)) ? 'voted' : ''}></span></td>)}</Tr>\n        )\n    });\n\n    return (\n        <Fragment>\n            <section className=\"fechas-stats-heatmap marger gapper neumorpher\">\n                    <h3>MAPA DE CALOR</h3>\n                <table>\n                    <tbody>\n                        {rows}\n                        <TdBottom />\n                    </tbody>\n                </table> \n            </section>\n        {showModal && \n            <Fragment>\n                <Overlay onclick={() => setShowModal(false)}/>\n                <UsersModal users={props.evento.users} onclose={() => setShowModal(false)}/>\n            </Fragment>\n        }\n    </Fragment>\n        \n    )\n}\n\nexport default FechasHeatmap;","import React from 'react'\nimport ReactApexChart from \"react-apexcharts\";\n\nconst Piechart = props => {\n\n    const labelsArray = [];\n    props.votes.forEach((item) => labelsArray.push(item[props.voteType]));\n    const votosArray = [];\n    props.votes.forEach((item) => votosArray.push(item.users.length))\n    const chartData = {\n        chart: {\n            type: 'donut',\n            toolbar: {\n                show: false,\n            },\n        },\n        theme: {\n            mode: 'light', \n            palette: 'palette1', \n            monochrome: {\n                enabled: false,\n            }\n        },\n        fill: {\n            opacity: 1,\n            type: 'solid',\n            gradient: {\n                shade: 'dark',\n                type: \"vertical\",\n                shadeIntensity: 0.7,\n                gradientToColors: undefined,\n                inverseColors: false,\n                opacityFrom: 1,\n                opacityTo: 0,\n                stops: [0, 100],\n                colorStops: []\n            },\n            pattern: {\n                style: 'slantedLines',\n                width: 6,\n                height: 6,\n                strokeWidth: 2,\n            },\n        },\n        series: votosArray,\n        labels: labelsArray,\n        stroke: {\n            show: false,\n            curve: 'smooth',\n            lineCap: 'butt',\n            colors: ['#007849', '#F6C758'],\n            width: 1,\n            dashArray: 0,\n        },\n        legend: {\n            show: false,\n        },\n        tooltip: {\n            enabled: false,\n        },\n        dataLabels: {\n            enabled: true,\n            style: {\n                colors: ['#333'],\n                fontWeight: 'bold'\n            },\n            dropShadow: {\n                color: '#dadada'\n            }\n        },\n        plotOptions: {\n            pie: {\n                dataLabels: {\n                    offset: 0,\n                    minAngleToShowLabel: 10,\n                }, \n                donut: {\n                    labels: {\n                        show: true,\n                        name: {\n                            color: '#333',\n                            fontSize: '40px',\n                            fontFamily: 'var(--font)',\n                            fontWeight: 700,\n                        },\n                        value: {\n                            color: '#333',\n                            fontSize: '40px',\n                            fontFamily: 'var(--font)',\n                            fontWeight: 700,\n                        },\n                        total: {\n                            show: false,\n                        }\n                    }\n                }\n            },\n\n        },\n        \n           \n    }\n\n    return <ReactApexChart options={chartData} series={chartData.series} type={chartData.chart.type}/>;\n}\n\nexport default Piechart;","import Piechart from \"../charts/Piechart\";\n\n\nconst FechasPiechart = props => {\n    const measureItem = {\n        fechas: 'date',\n        sitios: 'place',\n        regalos: 'regalo'\n    }\n\n    return (\n        <section className=\"fechas-piechart marger gapper neumorpher\">\n            <h3>DONUT DE {props.title}</h3>\n            <Piechart evento={props.evento} votes={props.toMeasure} voteType={measureItem[props.statsOf]}/>\n        </section>\n    )\n}\n\nexport default FechasPiechart;","import { IoArrowBackSharp as BackIcon } from \"react-icons/io5\";\nimport { Fragment, useEffect , useState } from 'react';\nimport FechasStatsTabla from \"./FechasStatsTabla\";\nimport FechasHeatmap from \"./FechasHeatmap\";\nimport FechasPiechart from \"./FechasPiechart\";\nimport Loader from '../UI/Loader';\nimport { GiTumbleweed } from 'react-icons/gi';\n\nconst FechasStats = props => {\n    const [haySelection, setHaySelection] = useState(false);\n    const [isLoading, setIsloading] = useState(true)\n\n    useEffect(() => {\n        if (props.toMeasure.length > 0) {\n            setHaySelection(true)\n        }\n        setIsloading(false)\n    }, [props.toMeasure])\n    return (\n        <Fragment>\n            {isLoading\n                ? <div className=\"loader-wrapper\"><Loader /></div>\n                : <section className=\"fechas-stats\">\n                    <div className=\"stats-header\">\n                        <button onClick={props.onBack}><BackIcon /></button>\n                        <h1>{props.evento.title}</h1>\n                    </div>\n                    {haySelection\n                    ? <Fragment>\n                        <FechasStatsTabla evento={props.evento} toMeasure={props.toMeasure} statsOf={props.statsOf} title={props.title}/>\n                        <FechasHeatmap evento={props.evento} toMeasure={props.toMeasure} available={props.available} statsOf={props.statsOf} />\n                        <FechasPiechart evento={props.evento} toMeasure={props.toMeasure} title={props.title} statsOf={props.statsOf}/>\n                    </Fragment>\n                    \n                    : <section className=\"gapper center fallback\"><p>{props.fallbackText}</p><div className=\"tumbleweed-wrapper\"><GiTumbleweed /></div></section>\n                    }    \n                </section>\n            }\n        </Fragment>\n    )\n}\n\nexport default FechasStats;","import Overlay from \"../UI/Overlay\";\nimport { useState, Fragment, useEffect } from 'react';\nimport Button from \"../UI/Button\";\nimport FechasStats from \"./FechasStats\";\nimport { DayPicker } from 'react-day-picker';\nimport 'react-day-picker/dist/style.css';\nimport es from 'date-fns/locale/es';\nimport useUser from \"../../hooks/use-user\";\nimport { getFirestore, doc, getDoc, updateDoc, collection } from \"firebase/firestore\";\nimport MyFirebase from \"../../database/firebase\";\nimport { useParams } from \"react-router-dom\";\nconst app = MyFirebase();\n\nconst EventoFechas = props => {\n    const evento = props.evento;\n    const params = useParams();\n    const eventoId = params.eventoId;\n    const db = getFirestore(app);\n    const eventosRef = collection(db, 'fullEventos');\n    const user = useUser(localStorage.getItem('uid'));\n    const [showCalendar, setShowCalendar] = useState(false);\n    const [isStats, setIsStats] = useState(false);\n    const [days, setDays] = useState([]);\n    const [bookedDays, setBookedDays] = useState();\n    const bookedStyle = { border: '2px solid deeppink' };\n\n    useEffect(() => {\n        const bookedDaysToDate = [...evento.availableDates].map((msDate) => new Date(msDate));\n        setBookedDays(bookedDaysToDate);\n        const docRef = doc(eventosRef, eventoId);\n        getDoc(docRef).then((doc) => {\n            const updatedDays = [];\n            doc.data().datesVotes.forEach((vote) => {\n                if (vote.users.includes(user.displayName)) {\n                    const date = new Date(vote.date)\n                    updatedDays.push(date)\n                }\n            })\n            return updatedDays\n        }).then((updatedDays) => {\n            setDays(updatedDays)\n        })\n    }, [eventoId, showCalendar])\n\n    const calendarShowHandler = () => {\n        setShowCalendar(!showCalendar)\n    }\n    const showStatsHandler = () => {\n        setIsStats(!isStats)\n    }\n\n    const fechasDoneHandler = () => {\n       \n        \n        //traemos el array de la DB:\n        const arrayToUpload = [...evento.datesVotes];\n        //por cada fecha enviada en la seleccion:\n        days.forEach((day) => {\n            //fecha a milisegundos\n            const vote = new Date(day).getTime();\n            //array con 1 item en caso de que esta fecha ya este votada\n            const hasBeenVoted = evento.datesVotes.filter((item) => item.date === vote);\n            //si estaba votada:\n            if (hasBeenVoted.length > 0) {\n                //check si ya la habia votado\n                const updatedUsers = (hasBeenVoted[0].users.includes(user.displayName))\n                //si ya estaba hago un array de users (upadatedUsers) nuevo sin mi:\n                 ? hasBeenVoted[0].users.filter((item) => item !== user.displayName)\n                 //si la estoy votando de nuevas hago un array nuevo de users (updatedUsers) conmigo\n                 : [...hasBeenVoted[0].users, user.displayName];\n                \n                //elimino de dateVotes el obj de este voto\n                const index = arrayToUpload.map(function(e) { return e.date; }).indexOf(vote);\n                arrayToUpload.splice(index, 1)\n                \n                //añado a dateVotes el nuevo objeto de este voto actualizado\n                const newVote = {date: vote, users: updatedUsers};\n                arrayToUpload.push(newVote); \n                \n            //si no estaba votada:    \n            } else {\n                const newVote = {date: vote, users: [user.displayName]};\n                arrayToUpload.push(newVote); \n            }\n        })\n        const updatedVotes = {datesVotes: arrayToUpload};\n        // console.log(updatedVotes)\n        updateDoc(doc(eventosRef, eventoId), updatedVotes); \n        calendarShowHandler();\n    }\n    \n    const footer =\n        days && days.length > 0\n        ? `Has elegido ${days.length} día${(days.length !== 1) ? 's' : ''}.`\n        : `Elige las fechas.`;\n\n    return (\n        <div>\n            <div className=\"evento-fechas-action\">\n                <Button title=\"ELEGIR FECHAS\" onclick={calendarShowHandler}/>\n            </div>\n            {(showCalendar)\n            && \n            <Fragment>\n                <Overlay onclick={calendarShowHandler}/>\n                <div className=\"calendar-wrapper\">\n                    <DayPicker\n                    locale={es} \n                    mode=\"multiple\"\n                    selected={days}\n                    onSelect={setDays}\n                    footer={footer}\n                    fromDate={new Date()}\n                    modifiers={{ booked: bookedDays }}\n                    modifiersStyles={{ booked: bookedStyle }}   \n                    />\n                    <div className=\"evento-fechas-action\">\n                        <Button title=\"HECHO\" onclick={fechasDoneHandler}/>\n                    </div>\n                </div>\n            </Fragment>\n            }\n            <div className=\"evento-fechas-action\">\n                <Button title=\"VER SELECCIONES\" onclick={showStatsHandler}/>\n            </div>\n            {(isStats) && <FechasStats\n                            evento={evento} \n                            toMeasure={evento.datesVotes}\n                            available={evento.availableDates}\n                            statsOf=\"fechas\"\n                            title=\"FECHAS\"\n                            onBack={showStatsHandler}\n                            fallbackText=\"Todavía no se han elegido fechas.\"\n                            />}\n        </div>\n    )\n}\n\nexport default EventoFechas;","import { useState } from 'react';\n\nconst Clickable = props => {\n    const [isClicked, setIsClicked] = useState((props.initial) ? !!props.initial : false);\n    const clickHandler = () => {\n        setIsClicked(!isClicked);\n        props.onclick();\n    }\n\n    return (\n        <button onClick={clickHandler} key={props.title} className={`clickable ${isClicked && \"clicked\"}`}>{props.title}</button>\n    )\n}\n\nexport default Clickable;","import Overlay from \"../UI/Overlay\";\nimport { useState, Fragment, useEffect } from 'react';\nimport Button from \"../UI/Button\";\nimport Clickable from \"../UI/Clickable\";\nimport FechasStats from \"./FechasStats\";\nimport useUser from \"../../hooks/use-user\";\nimport { getFirestore, doc, getDoc, updateDoc, collection } from \"firebase/firestore\";\nimport MyFirebase from \"../../database/firebase\";\nimport { useParams } from \"react-router-dom\";\nimport AdderForm from \"./AdderForm\";\n\nconst app = MyFirebase();\n\nconst EventoPlaces = props => {\n    const user = useUser(localStorage.getItem('uid'));\n    const params = useParams();\n    const eventoId = params.eventoId;\n    const db = getFirestore(app);\n    const eventosRef = collection(db, 'fullEventos');\n    const evento = props.evento;\n    const [showPlaces, setShowPlaces] = useState(false);\n    const [isStats, setIsStats] = useState(false);\n    const [addPlace, setAddPlace] = useState(false);\n    const [selectedPlaces, setSelectedPlaces] = useState([]);\n    const [availablePlaces, setAvailablePlaces] = useState(evento.availablePlaces);\n    const showPlacesHandler = () => {\n        setShowPlaces(!showPlaces)\n    }\n    const showStatsHandler = () => {\n        setIsStats(!isStats)\n    }\n    const addPlaceHandler = () => {\n        setAddPlace(!addPlace)\n    }\n\n    useEffect(() => {\n        const docRef = doc(eventosRef, eventoId);\n        getDoc(docRef).then((doc) => {\n            const updatedPlaces = [];\n            doc.data().placesVotes.forEach((vote) => {\n                if (vote.users.includes(user.displayName)) {\n                    updatedPlaces.push(vote)\n                }\n            })\n            return updatedPlaces\n        }).then((updatedPlaces) => {\n            setSelectedPlaces(updatedPlaces)\n        })\n    }, [evento])\n\n    const managePlace = (place) => {\n        if (!selectedPlaces.includes(place)) {\n            setSelectedPlaces([...selectedPlaces, place])\n        } else {\n            setSelectedPlaces(selectedPlaces.filter(item => item !== place))\n        }\n    }\n\n    const placesDoneHandler = () => { \n        //traemos el array de la DB:\n        const arrayToUpload = [...evento.placesVotes];\n        //por cada item enviado en la seleccion:\n        selectedPlaces.forEach((vote) => {\n            //array con 1 item en caso de que este item ya este votada\n            const hasBeenVoted = evento.placesVotes.filter((item) => item.place === vote);\n            //si estaba votada:\n            if (hasBeenVoted.length > 0) {\n                //check si ya la habia votado\n                const updatedUsers = (hasBeenVoted[0].users.includes(user.displayName))\n                //si ya estaba hago un array de users (upadatedUsers) nuevo sin mi:\n                 ? hasBeenVoted[0].users.filter((item) => item !== user.displayName)\n                 //si la estoy votando de nuevas hago un array nuevo de users (updatedUsers) conmigo\n                 : [...hasBeenVoted[0].users, user.displayName];\n                \n                //elimino de dateVotes el obj de este voto\n                const index = arrayToUpload.map(function(e) { return e.place; }).indexOf(vote);\n                arrayToUpload.splice(index, 1)\n                \n                //añado a dateVotes el nuevo objeto de este voto actualizado\n                const newVote = {place: vote, users: updatedUsers};\n                arrayToUpload.push(newVote); \n                \n            //si no estaba votada:    \n            } else {\n                const newVote = {place: vote, users: [user.displayName]};\n                arrayToUpload.push(newVote); \n            }\n        })\n        const updatedVotes = {placesVotes: arrayToUpload};\n        // console.log(updatedVotes)\n        updateDoc(doc(eventosRef, eventoId), updatedVotes);\n        setShowPlaces(!showPlaces)\n    }\n\n    const checkState = (place) => {\n        const copyVotes = props.evento.placesVotes.filter((item) => item.place === place)\n        if (copyVotes.length > 0 && copyVotes[0].users.includes(user.displayName)) {\n            return true\n        }\n\n        if (selectedPlaces.includes(place)) {\n            return true\n        }\n\n        return false\n    }\n\n    const addSitiosHandler = sitios => {\n        const sitiosListCopy = [...availablePlaces];\n        const updatedList = [...sitiosListCopy, ...sitios]\n        setAvailablePlaces(updatedList);\n        const updatedVotes = {availablePlaces: updatedList};\n        updateDoc(doc(eventosRef, eventoId), updatedVotes);\n        setAddPlace(false);\n    }\n   \n    const places = availablePlaces.map((place) => <Clickable initial={checkState(place)} key={place} onclick={() => managePlace(place)} title={place}/>)\n    return (\n        <div>\n             <div className=\"evento-fechas-action\">\n                <Button title=\"ELEGIR SITIOS\" onclick={showPlacesHandler}/>\n            </div>\n            {showPlaces &&\n                <Fragment>\n                     <Overlay onclick={showPlacesHandler}/>\n                     <div className=\"calendar-wrapper places-wrapper\">\n                        {places}\n                        <div className=\"evento-fechas-action\">\n                        <Button title=\"HECHO\" onclick={placesDoneHandler}/>\n                    </div>\n                     </div>\n                     \n                </Fragment>\n            }\n            <div className=\"evento-fechas-action\">\n                <Button title=\"VER SELECCIONES\" onclick={showStatsHandler}/>\n            </div>\n            <div className=\"evento-fechas-action\">\n                <Button title=\"AÑADIR SITIO\" onclick={addPlaceHandler}/>\n            </div>\n            {addPlace && <AdderForm onAdd={addSitiosHandler} isAdding=\"sitios\" onclose={() => setAddPlace(false)}/>}\n            {(isStats) && <FechasStats\n                            evento={evento} \n                            toMeasure={evento.placesVotes}\n                            available={availablePlaces}\n                            statsOf=\"sitios\"\n                            title=\"SITIOS\"\n                            onBack={showStatsHandler}\n                            fallbackText=\"Todavía no se han elegido sitios.\"\n                            />}\n        </div>\n    )\n}\n\nexport default EventoPlaces;","import Overlay from \"../UI/Overlay\";\nimport { useState, Fragment, useEffect } from 'react';\nimport Button from \"../UI/Button\";\nimport Clickable from \"../UI/Clickable\";\nimport FechasStats from \"./FechasStats\";\nimport useUser from \"../../hooks/use-user\";\nimport { getFirestore, doc, getDoc, deleteDoc, updateDoc, collection } from \"firebase/firestore\";\nimport MyFirebase from \"../../database/firebase\";\nimport { useParams } from \"react-router-dom\";\nimport AdderForm from \"./AdderForm\";\nconst app = MyFirebase();\n\nconst EventoRegalo = props => {\n    const user = useUser(localStorage.getItem('uid'));\n    const params = useParams();\n    const eventoId = params.eventoId;\n    const db = getFirestore(app);\n    const eventosRef = collection(db, 'fullEventos');\n    const evento = props.evento;\n    const [showRegalos, setShowRegalos] = useState(false);\n    const [isStats, setIsStats] = useState(false);\n    const [addRegalo, setAddRegalo] = useState(false);\n    const [selectedRegalos, setSelectedRegalos] = useState([]);\n    const [availableRegalos, setAvailableRegalos] = useState(evento.availableRegalos);\n    const showRegaloHandler = () => {\n        setShowRegalos(!showRegalos)\n    }\n    const showStatsHandler = () => {\n        setIsStats(!isStats)\n    }\n    const addRegaloHandler = () => {\n        setAddRegalo(!addRegalo)\n    }\n\n    useEffect(() => {\n        const docRef = doc(eventosRef, eventoId);\n        getDoc(docRef).then((doc) => {\n            const updatedRegalos = [];\n            doc.data().regalosVotes.forEach((vote) => {\n                if (vote.users.includes(user.displayName)) {\n                    updatedRegalos.push(vote)\n                }\n            })\n            return updatedRegalos\n        }).then((updatedRegalos) => {\n            setSelectedRegalos(updatedRegalos)\n        })\n            \n    },[evento])\n\n    const manageRegalo = (regalo) => {\n        if (!selectedRegalos.includes(regalo)) {\n            setSelectedRegalos([...selectedRegalos, regalo])\n        } else {\n            setSelectedRegalos(selectedRegalos.filter(item => item !== regalo))\n        }\n    }\n\n    const regalosDoneHandler = () => { \n        //traemos el array de la DB:\n        const arrayToUpload = [...evento.regalosVotes];\n        //por cada item enviado en la seleccion:\n        selectedRegalos.forEach((vote) => {\n            //array con 1 item en caso de que este item ya este votada\n            const hasBeenVoted = evento.regalosVotes.filter((item) => item.regalo === vote);\n            //si estaba votada:\n            if (hasBeenVoted.length > 0) {\n                //check si ya la habia votado\n                const updatedUsers = (hasBeenVoted[0].users.includes(user.displayName))\n                //si ya estaba hago un array de users (upadatedUsers) nuevo sin mi:\n                 ? hasBeenVoted[0].users.filter((item) => item !== user.displayName)\n                 //si la estoy votando de nuevas hago un array nuevo de users (updatedUsers) conmigo\n                 : [...hasBeenVoted[0].users, user.displayName];\n                \n                //elimino de dateVotes el obj de este voto\n                const index = arrayToUpload.map(function(e) { return e.regalo; }).indexOf(vote);\n                arrayToUpload.splice(index, 1)\n                \n                //añado a dateVotes el nuevo objeto de este voto actualizado\n                const newVote = {regalo: vote, users: updatedUsers};\n                arrayToUpload.push(newVote); \n                \n            //si no estaba votada:    \n            } else {\n                const newVote = {regalo: vote, users: [user.displayName]};\n                arrayToUpload.push(newVote); \n            }\n        })\n        const updatedVotes = {regalosVotes: arrayToUpload};\n        // console.log(updatedVotes)\n        updateDoc(doc(eventosRef, eventoId), updatedVotes);\n        setShowRegalos(!showRegalos) \n    }\n\n    const addRegalosHandler = regalos => {\n        const regalosListCopy = [...availableRegalos];\n        const updatedList = [...regalosListCopy, ...regalos]\n        setAvailableRegalos(updatedList);\n        const updatedVotes = {availableRegalos: updatedList};\n        updateDoc(doc(eventosRef, eventoId), updatedVotes);\n        setAddRegalo(false);\n    }\n\n    const checkState = (regalo) => {\n        const copyVotes = props.evento.regalosVotes.filter((item) => item.regalo === regalo)\n        if (copyVotes.length > 0 && copyVotes[0].users.includes(user.displayName)) {\n            return true\n        }\n\n        if (selectedRegalos.includes(regalo)) {\n            return true\n        }\n\n        return false\n    }\n\n    const regalos = availableRegalos.map((regalo) => <Clickable initial={checkState(regalo)} key={regalo} onclick={() => manageRegalo(regalo)} title={regalo}/>)\n    return (\n        <div>\n             <div className=\"evento-fechas-action\">\n                <Button title=\"ELEGIR REGALOS\" onclick={showRegaloHandler}/>\n            </div>\n            {showRegalos &&\n                <Fragment>\n                     <Overlay onclick={showRegaloHandler}/>\n                     <div className=\"calendar-wrapper places-wrapper\">\n                        {regalos}\n                        <div className=\"evento-fechas-action\">\n                        <Button title=\"HECHO\" onclick={regalosDoneHandler}/>\n                    </div>\n                     </div>\n                     \n                </Fragment>\n            }\n            <div className=\"evento-fechas-action\">\n                <Button title=\"VER SELECCIONES\" onclick={showStatsHandler}/>\n            </div>\n            <div className=\"evento-fechas-action\">\n                <Button title=\"AÑADIR REGALO\" onclick={addRegaloHandler}/>\n            </div>\n            {addRegalo && <AdderForm onAdd={addRegalosHandler} isAdding=\"regalos\" onclose={() => setAddRegalo(false)}/>}\n            {(isStats) && <FechasStats\n                            evento={evento} \n                            toMeasure={evento.regalosVotes}\n                            available={availableRegalos}\n                            statsOf=\"regalos\"\n                            title=\"REGALOS\"\n                            onBack={showStatsHandler}\n                            fallbackText=\"Todavía no se han elegido regalos.\"\n                            />}\n        </div>\n    )\n}\n\nexport default EventoRegalo;\n","import { useNavigate, useParams } from \"react-router-dom\";\nimport { useState, useEffect, Fragment } from 'react';\nimport { getFirestore, doc, getDoc, deleteDoc, collection, updateDoc } from \"firebase/firestore\";\nimport MyFirebase from \"../database/firebase\";\nimport useUser from '../hooks/use-user';\nimport EventoFechas from \"../components/eventos/EventoFechas\";\nimport EventoPlaces from \"../components/eventos/EventoPlaces\";\nimport EventoRegalos from \"../components/eventos/EventoRegalos\";\nimport Loader from '../components/UI/Loader';\nimport { Link } from \"react-router-dom\";\nimport { \n    GiPartyPopper as GCicon, \n    GiBoombox as DPicon, \n    GiCandles as CAicon ,\n    GiFamilyHouse as ECicon,\n    GiFlipFlops as VVicon,\n    GiWoodCabin as ERicon,\n    GiSkier as VSicon\n\n} from \"react-icons/gi\";\nimport Overlay from \"../components/UI/Overlay\";\nimport AddGente from \"../components/eventos/AddGente\";\n\nconst app = MyFirebase();\n\nconst EventoPage = props => {\n    const user = useUser(localStorage.getItem('uid'));\n    const params = useParams();\n    const eventoId = params.eventoId;\n    const navigate = useNavigate();\n    const [loadedEvento, setLoadedEvento] = useState()\n    const [isLoading, setIsloading] = useState(true)\n    const [sureToDelete, setSureToDelete] = useState(false)\n    const [addingGente, setAddingGente] = useState(false)\n    const db = getFirestore(app);\n    const eventoRef = doc(db, \"fullEventos\", eventoId);\n    const teaserRef = doc(db, \"eventos\", eventoId);\n    const getEvento = async ()=> {\n       \n        getDoc(eventoRef).then((docSnap) => {\n            setLoadedEvento(docSnap.data())\n            setIsloading(false)\n        });\n    }\n\n    useEffect(() => {\n        getEvento();\n    }, [eventoId])\n\n    const WhichIcon = {\n        CA: <CAicon />, //cumple\n        GC: <GCicon />, // grandes celebraciones\n        DP: <DPicon />, // techno party\n        ER: <ERicon />,// escapada rural\n        VS: <VSicon />,//viaje de ski\n        EC: <ECicon />, //encerrona\n        VV: <VVicon />, //viaje de verano\n    }\n    \n    const deleteEventoHandler = () => {\n        const usersRef = collection(db, 'users');\n        deleteDoc(eventoRef);\n        deleteDoc(teaserRef);\n        const updateadCreatedEvents = {\"createdEventos\": [...user.createdEventos, eventoId]};\n        updateDoc(doc(usersRef, user.userId), updateadCreatedEvents)\n        setSureToDelete(false);\n        navigate('/')\n    }\n\n    const SafeEliminar = () => {\n        return (\n            <Fragment>\n                <Overlay onclick={() => setSureToDelete(false)}/>\n            <div className=\"sure-delete gapper\">\n                <p>¿Seguro que lo quieres eliminar?</p>\n                <p>Esta acción no se puede revertir.</p>\n                <div className=\"safe-delete-action gapper\">\n                    <button onClick={() => setSureToDelete(false)}>CANCELAR</button>\n                    <button onClick={deleteEventoHandler}>ELIMINAR</button>\n                </div>\n            </div>\n            </Fragment>\n        )\n    }\n\n    const SettingsAction = () => {\n        return (\n            <div className=\"settings-action gapper\">\n                <button onClick={() =>  setSureToDelete(true)} className=\"eliminar-evento\">Eliminar</button>\n                <Link className=\"eliminar-evento\" to={`/edit/${eventoId}`}>Editar</Link>\n                <button onClick={() =>  setAddingGente(true)} className=\"eliminar-evento add-friend\">Participantes</button>\n            </div>\n        )\n    }\n\n    return (\n        <Fragment>\n            {isLoading\n            ? <div className=\"loader-wrapper\"><Loader /></div>\n            : <section className=\"padding gapper\">\n                <div className=\"evento-h1-wrapper\">\n                <h1>{loadedEvento.title}<span>creado por {loadedEvento.creator.displayName}</span></h1>\n                <div className={`evento-detail-cat ${loadedEvento.catId}`}>{WhichIcon[loadedEvento.catId]}<span>{loadedEvento.categoria}</span></div> \n                </div>\n                <div className=\"evento-desc marger\">{loadedEvento.desc}</div>\n                {(localStorage.getItem('uid') === loadedEvento.creator.userId) && <SettingsAction />}\n                {sureToDelete && <SafeEliminar />}\n                {addingGente && <AddGente onAdd={null} isCreation={false} evento={loadedEvento} onclose={() => setAddingGente(false)}/>}\n                {(loadedEvento.hasDates && <div className=\"evento-tema neumorpher\"><h3>TEMA FECHAS</h3><EventoFechas evento={loadedEvento}/></div>)}\n                {(loadedEvento.hasPlaces) && <div className=\"evento-tema neumorpher\"><h3>TEMA SITIOS</h3><EventoPlaces evento={loadedEvento}/></div>}\n                {(loadedEvento.hasRegalos) && <div className=\"evento-tema neumorpher\"><h3>TEMA REGALOS</h3><EventoRegalos evento={loadedEvento}/></div>}\n            </section>\n            }\n        </Fragment>\n       \n       \n        \n    )\n}\n\nexport default EventoPage;"],"names":["props","onClick","onclick","className","title","app","MyFirebase","useState","evento","users","includes","contacto","displayName","isSelected","setIsSelected","db","getFirestore","isCreation","onAdd","eventoRef","doc","eventoId","teaserRef","getDoc","then","updatedParticipantes","data","filter","user","updateDoc","userId","to","trim","indexOf","split","map","n","join","substring","amigos","setAmigos","isLoading","setIsloading","useEffect","userRef","localStorage","getItem","engagedTo","Fragment","Overlay","onclose","Loader","length","cosas","setCosas","userInput","setUserInput","cosasDisplay","cosa","isAdding","onSubmit","event","preventDefault","cosasCopy","cosasUpdate","placeholder","onChange","target","value","showModal","setShowModal","tableTr","toMeasure","measure","toMeasureCopy","measureItem","fechas","date","sitios","place","regalos","regalo","subject","statsOf","Date","getDate","getMonth","getFullYear","Tr","children","TdBottom","userTds","Math","floor","random","rows","item","tdWidth","style","width","labelsArray","votes","forEach","push","voteType","votosArray","chartData","chart","type","toolbar","show","theme","mode","palette","monochrome","enabled","fill","opacity","gradient","shade","shadeIntensity","gradientToColors","undefined","inverseColors","opacityFrom","opacityTo","stops","colorStops","pattern","height","strokeWidth","series","labels","stroke","curve","lineCap","colors","dashArray","legend","tooltip","dataLabels","fontWeight","dropShadow","color","plotOptions","pie","offset","minAngleToShowLabel","donut","name","fontSize","fontFamily","total","options","haySelection","setHaySelection","onBack","available","fallbackText","useParams","eventosRef","collection","useUser","showCalendar","setShowCalendar","isStats","setIsStats","days","setDays","bookedDays","setBookedDays","bookedDaysToDate","availableDates","msDate","docRef","updatedDays","datesVotes","vote","calendarShowHandler","showStatsHandler","footer","Button","DayPicker","locale","es","selected","onSelect","fromDate","modifiers","booked","modifiersStyles","border","arrayToUpload","day","getTime","hasBeenVoted","updatedUsers","index","e","splice","newVote","updatedVotes","initial","isClicked","setIsClicked","showPlaces","setShowPlaces","addPlace","setAddPlace","selectedPlaces","setSelectedPlaces","availablePlaces","setAvailablePlaces","showPlacesHandler","updatedPlaces","placesVotes","checkState","copyVotes","places","managePlace","AdderForm","sitiosListCopy","updatedList","showRegalos","setShowRegalos","addRegalo","setAddRegalo","selectedRegalos","setSelectedRegalos","availableRegalos","setAvailableRegalos","showRegaloHandler","updatedRegalos","regalosVotes","manageRegalo","regalosListCopy","navigate","useNavigate","loadedEvento","setLoadedEvento","sureToDelete","setSureToDelete","addingGente","setAddingGente","getEvento","docSnap","WhichIcon","CA","GC","DP","ER","VS","EC","VV","deleteEventoHandler","usersRef","deleteDoc","updateadCreatedEvents","createdEventos","SafeEliminar","SettingsAction","creator","catId","categoria","desc","AddGente","hasDates","hasPlaces","hasRegalos","EventoRegalos"],"sourceRoot":""}